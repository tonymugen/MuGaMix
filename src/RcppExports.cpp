// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// runSampler
Rcpp::List runSampler(const std::vector<double>& yVec, const std::vector<int32_t>& lnFac, const int32_t& Npop, const int32_t& Nadapt, const int32_t& Nsamp, const int32_t& Nthin, const int32_t& Nchains);
RcppExport SEXP _MuGaMix_runSampler(SEXP yVecSEXP, SEXP lnFacSEXP, SEXP NpopSEXP, SEXP NadaptSEXP, SEXP NsampSEXP, SEXP NthinSEXP, SEXP NchainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type yVec(yVecSEXP);
    Rcpp::traits::input_parameter< const std::vector<int32_t>& >::type lnFac(lnFacSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Npop(NpopSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nadapt(NadaptSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nsamp(NsampSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nthin(NthinSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nchains(NchainsSEXP);
    rcpp_result_gen = Rcpp::wrap(runSampler(yVec, lnFac, Npop, Nadapt, Nsamp, Nthin, Nchains));
    return rcpp_result_gen;
END_RCPP
}
// runSamplerMiss
Rcpp::List runSamplerMiss(const std::vector<double>& yVec, const std::vector<int32_t>& lnFac, const std::vector<int32_t>& missIDs, const int32_t& Npop, const int32_t& Nadapt, const int32_t& Nsamp, const int32_t& Nthin, const int32_t& Nchains);
RcppExport SEXP _MuGaMix_runSamplerMiss(SEXP yVecSEXP, SEXP lnFacSEXP, SEXP missIDsSEXP, SEXP NpopSEXP, SEXP NadaptSEXP, SEXP NsampSEXP, SEXP NthinSEXP, SEXP NchainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type yVec(yVecSEXP);
    Rcpp::traits::input_parameter< const std::vector<int32_t>& >::type lnFac(lnFacSEXP);
    Rcpp::traits::input_parameter< const std::vector<int32_t>& >::type missIDs(missIDsSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Npop(NpopSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nadapt(NadaptSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nsamp(NsampSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nthin(NthinSEXP);
    Rcpp::traits::input_parameter< const int32_t& >::type Nchains(NchainsSEXP);
    rcpp_result_gen = Rcpp::wrap(runSamplerMiss(yVec, lnFac, missIDs, Npop, Nadapt, Nsamp, Nthin, Nchains));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MuGaMix_runSampler", (DL_FUNC) &_MuGaMix_runSampler, 7},
    {"_MuGaMix_runSamplerMiss", (DL_FUNC) &_MuGaMix_runSamplerMiss, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_MuGaMix(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
